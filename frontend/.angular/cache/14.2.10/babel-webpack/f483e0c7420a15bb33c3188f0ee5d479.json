{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let LekarService = /*#__PURE__*/(() => {\n  class LekarService {\n    constructor(http) {\n      this.http = http;\n      this.uri = 'http://localhost:4000/lekar';\n    }\n\n    dohvatiPregledeSpec(specijalizacija) {\n      const data = {\n        specijalizacija: specijalizacija\n      };\n      return this.http.post(`${this.uri}/dohvatiPregledeSpec`, data);\n    }\n\n    dodajPregled(pregled, lekar) {\n      const data = {\n        naziv: pregled,\n        lekar: lekar\n      };\n      return this.http.post(`${this.uri}/dodajPregled`, data);\n    }\n\n    izbaciPregled(pregled, lekar) {\n      const data = {\n        naziv: pregled,\n        lekar: lekar\n      };\n      return this.http.post(`${this.uri}/izbaciPregled`, data);\n    }\n\n    posaljiZahtev(naziv, specijalizacija) {\n      const data = {\n        naziv: naziv,\n        specijalizacija: specijalizacija\n      };\n      return this.http.post(`${this.uri}/posaljiZahtev`, data);\n    }\n\n    dohvatiPregledeLekar(licenca) {\n      const data = {\n        licenca: licenca\n      };\n      return this.http.post(`${this.uri}/dohvatiPregledeLekar`, data);\n    }\n\n    formatirajDatum(ceoDatum) {\n      const datum = new Date(ceoDatum);\n      const dan = datum.getDate();\n      const mesec = datum.getMonth() + 1;\n      const godina = datum.getFullYear(); // Formatiranje datuma\n\n      const formatiran_datum = `${dan < 10 ? '0' : ''}${dan}.${mesec < 10 ? '0' : ''}${mesec}.${godina}.`;\n      return formatiran_datum;\n    }\n\n    formatirajVreme(ceoDatum) {\n      const datum = new Date(ceoDatum);\n      const sati = datum.getHours();\n      const minuti = datum.getMinutes(); // Formatiranje vremena\n\n      const formatirano_vreme = `${sati < 10 ? '0' : ''}${sati}:${minuti < 10 ? '0' : ''}${minuti}`;\n      return formatirano_vreme;\n    }\n\n    sortirajPreglede(pregledi) {\n      let sviPregledi = pregledi;\n      return sviPregledi.sort((p1, p2) => {\n        const datumA = new Date(p1.pocetak_pregleda);\n        const datumB = new Date(p2.pocetak_pregleda); // Uporedi datume\n\n        if (datumA < datumB) return -1;\n        if (datumA > datumB) return 1;\n        return 0;\n      });\n    }\n\n    dohvatiPacijenta(kor_ime) {\n      const data = {\n        kor_ime: kor_ime\n      };\n      return this.http.post(`${this.uri}/dohvatiPacijenta`, data);\n    }\n\n    dohvatiIzvestaje(pacijent) {\n      const data = {\n        pacijent: pacijent\n      };\n      return this.http.post(`${this.uri}/dohvatiIzvestaje`, data);\n    }\n\n    sortirajIzvestaje(izvestaji) {\n      let sviIzvestaji = izvestaji;\n      return sviIzvestaji.sort((i1, i2) => {\n        const datumA = new Date(i1.datum_pregleda);\n        const datumB = new Date(i2.datum_pregleda); // Uporedi datume\n\n        if (datumA < datumB) return 1;\n        if (datumA > datumB) return -1;\n        return 0;\n      });\n    }\n\n    dohvatiPregledeBezIzvestaja(licenca) {\n      const data = {\n        licenca: licenca\n      };\n      return this.http.post(`${this.uri}/dohvatiPregledeBezIzvestaja`, data);\n    }\n\n    unesiIzvestaj(razlog_dolaska, dijagnoza, datum_narednog_pregleda, datum_pregleda, specijalizacija, terapija, pacijent, lekar, ime_lekara, prezime_lekara) {\n      const data = {\n        razlog_dolaska: razlog_dolaska,\n        dijagnoza: dijagnoza,\n        datum_narednog_pregleda: datum_narednog_pregleda,\n        datum_pregleda: datum_pregleda,\n        specijalizacija: specijalizacija,\n        terapija: terapija,\n        pacijent: pacijent,\n        lekar: lekar,\n        ime_lekara: ime_lekara,\n        prezime_lekara: prezime_lekara\n      };\n      return this.http.post(`${this.uri}/unesiIzvestaj`, data);\n    }\n\n    azurirajProfil(data) {\n      return this.http.post(`${this.uri}/azurirajProfil`, data);\n    }\n\n  }\n\n  LekarService.ɵfac = function LekarService_Factory(t) {\n    return new (t || LekarService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  LekarService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: LekarService,\n    factory: LekarService.ɵfac,\n    providedIn: 'root'\n  });\n  return LekarService;\n})();","map":null,"metadata":{},"sourceType":"module"}