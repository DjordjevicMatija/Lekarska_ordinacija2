{"ast":null,"code":"// compare\nvar spawn = require('cross-spawn');\n\nvar debug = require('debug')('gm');\n\nvar utils = require('./utils');\n/**\n * Compare two images uses graphicsmagicks `compare` command.\n *\n * gm.compare(img1, img2, 0.4, function (err, equal, equality) {\n *   if (err) return handle(err);\n *   console.log('The images are equal: %s', equal);\n *   console.log('There equality was %d', equality);\n * });\n *\n * @param {String} orig Path to an image.\n * @param {String} compareTo Path to another image to compare to `orig`.\n * @param {Number|Object} [options] Options object or the amount of difference to tolerate before failing - defaults to 0.4\n * @param {Function} cb(err, Boolean, equality, rawOutput)\n */\n\n\nmodule.exports = exports = function (proto) {\n  function compare(orig, compareTo, options, cb) {\n    var isImageMagick = this._options && this._options.imageMagick;\n    var appPath = this._options && this._options.appPath || '';\n    var args = ['-metric', 'mse', orig, compareTo]; // Resove executable\n\n    let bin;\n\n    switch (isImageMagick) {\n      case true:\n        bin = 'compare';\n        break;\n\n      case '7+':\n        bin = 'magick';\n        args.unshift('compare');\n        break;\n\n      default:\n        bin = 'gm';\n        args.unshift('compare');\n        break;\n    } // Prepend app path\n\n\n    bin = appPath + bin;\n    var tolerance = 0.4; // outputting the diff image\n\n    if (typeof options === 'object') {\n      if (options.highlightColor && options.highlightColor.indexOf('\"') < 0) {\n        options.highlightColor = '\"' + options.highlightColor + '\"';\n      }\n\n      if (options.file) {\n        if (typeof options.file !== 'string') {\n          throw new TypeError('The path for the diff output is invalid');\n        } // graphicsmagick defaults to red\n\n\n        if (options.highlightColor) {\n          args.push('-highlight-color');\n          args.push(options.highlightColor);\n        }\n\n        if (options.highlightStyle) {\n          args.push('-highlight-style');\n          args.push(options.highlightStyle);\n        } // For IM, filename is the last argument. For GM it's `-file <filename>`\n\n\n        if (!isImageMagick) {\n          args.push('-file');\n        }\n\n        args.push(options.file);\n      }\n\n      if (typeof options.tolerance != 'undefined') {\n        if (typeof options.tolerance !== 'number') {\n          throw new TypeError('The tolerance value should be a number');\n        }\n\n        tolerance = options.tolerance;\n      }\n    } else {\n      // For ImageMagick diff file is required but we don't care about it, so null it out\n      if (isImageMagick) {\n        args.push('null:');\n      }\n\n      if (typeof options == 'function') {\n        cb = options; // tolerance value not provided, flip the cb place\n      } else {\n        tolerance = options;\n      }\n    }\n\n    var cmd = bin + ' ' + args.map(utils.escape).join(' ');\n    debug(cmd);\n    var proc = spawn(bin, args);\n    var stdout = '';\n    var stderr = '';\n    proc.stdout.on('data', function (data) {\n      stdout += data;\n    });\n    proc.stderr.on('data', function (data) {\n      stderr += data;\n    });\n    proc.on('close', function (code) {\n      // ImageMagick returns err code 2 if err, 0 if similar, 1 if dissimilar\n      if (isImageMagick) {\n        if (code === 0) {\n          return cb(null, 0 <= tolerance, 0, stdout);\n        } else if (code === 1) {\n          stdout = stderr;\n        } else {\n          return cb(stderr);\n        }\n      } else {\n        if (code !== 0) {\n          return cb(stderr);\n        }\n      } // Since ImageMagick similar gives err code 0 and no stdout, there's really no matching\n      // Otherwise, output format for IM is `12.00 (0.123)` and for GM it's `Total: 0.123`\n\n\n      var regex = isImageMagick ? /\\((\\d+\\.?[\\d\\-\\+e]*)\\)/m : /Total: (\\d+\\.?\\d*)/m;\n      var match = regex.exec(stdout);\n\n      if (!match) {\n        return cb(new Error('Unable to parse output.\\nGot ' + stdout));\n      }\n\n      var equality = parseFloat(match[1]);\n      cb(null, equality <= tolerance, equality, stdout, orig, compareTo);\n    });\n  }\n\n  if (proto) {\n    proto.compare = compare;\n  }\n\n  return compare;\n};","map":{"version":3,"names":["spawn","require","debug","utils","module","exports","proto","compare","orig","compareTo","options","cb","isImageMagick","_options","imageMagick","appPath","args","bin","unshift","tolerance","highlightColor","indexOf","file","TypeError","push","highlightStyle","cmd","map","escape","join","proc","stdout","stderr","on","data","code","regex","match","exec","Error","equality","parseFloat"],"sources":["C:/Users/viole/OneDrive/Documents/Angular projects/Lekarska_ordinacija2/frontend/node_modules/gm/lib/compare.js"],"sourcesContent":["// compare\n\nvar spawn = require('cross-spawn');\nvar debug = require('debug')('gm');\nvar utils = require('./utils');\n\n/**\n * Compare two images uses graphicsmagicks `compare` command.\n *\n * gm.compare(img1, img2, 0.4, function (err, equal, equality) {\n *   if (err) return handle(err);\n *   console.log('The images are equal: %s', equal);\n *   console.log('There equality was %d', equality);\n * });\n *\n * @param {String} orig Path to an image.\n * @param {String} compareTo Path to another image to compare to `orig`.\n * @param {Number|Object} [options] Options object or the amount of difference to tolerate before failing - defaults to 0.4\n * @param {Function} cb(err, Boolean, equality, rawOutput)\n */\n\nmodule.exports = exports = function (proto) {\n  function compare(orig, compareTo, options, cb) {\n\n    var isImageMagick = this._options && this._options.imageMagick;\n    var appPath = this._options && this._options.appPath || '';\n    var args = ['-metric', 'mse', orig, compareTo];\n\n    // Resove executable\n    let bin;\n\n    switch (isImageMagick) {\n      case true:\n        bin = 'compare';\n        break;\n      case '7+':\n        bin = 'magick'\n        args.unshift('compare');\n        break;\n      default:\n        bin = 'gm'\n        args.unshift('compare');\n        break\n    }\n\n    // Prepend app path\n    bin = appPath + bin\n\n    var tolerance = 0.4;\n    // outputting the diff image\n    if (typeof options === 'object') {\n\n      if (options.highlightColor && options.highlightColor.indexOf('\"') < 0) {\n        options.highlightColor = '\"' + options.highlightColor + '\"';\n      }\n\n      if (options.file) {\n        if (typeof options.file !== 'string') {\n          throw new TypeError('The path for the diff output is invalid');\n        }\n         // graphicsmagick defaults to red\n        if (options.highlightColor) {\n            args.push('-highlight-color');\n            args.push(options.highlightColor);\n        }\n        if (options.highlightStyle) {\n            args.push('-highlight-style')\n            args.push(options.highlightStyle)\n        }\n        // For IM, filename is the last argument. For GM it's `-file <filename>`\n        if (!isImageMagick) {\n            args.push('-file');\n        }\n        args.push(options.file);\n      }\n\n      if (typeof options.tolerance != 'undefined') {\n        if (typeof options.tolerance !== 'number') {\n          throw new TypeError('The tolerance value should be a number');\n        }\n        tolerance = options.tolerance;\n      }\n    } else {\n      // For ImageMagick diff file is required but we don't care about it, so null it out\n      if (isImageMagick) {\n        args.push('null:');\n      }\n\n      if (typeof options == 'function') {\n        cb = options; // tolerance value not provided, flip the cb place\n      } else {\n        tolerance = options\n      }\n    }\n\n    var cmd = bin + ' ' + args.map(utils.escape).join(' ')\n    debug(cmd);\n\n    var proc = spawn(bin, args);\n    var stdout = '';\n    var stderr = '';\n    proc.stdout.on('data',function(data) { stdout+=data });\n    proc.stderr.on('data',function(data) { stderr+=data });\n    proc.on('close', function (code) {\n      // ImageMagick returns err code 2 if err, 0 if similar, 1 if dissimilar\n      if (isImageMagick) {\n        if (code === 0) {\n          return cb(null, 0 <= tolerance, 0, stdout);\n        }\n        else if (code === 1) {\n          stdout = stderr;\n        } else {\n        return cb(stderr);\n        }\n      } else {\n        if(code !== 0) {\n          return cb(stderr);\n        }\n      }\n      // Since ImageMagick similar gives err code 0 and no stdout, there's really no matching\n      // Otherwise, output format for IM is `12.00 (0.123)` and for GM it's `Total: 0.123`\n      var regex = isImageMagick ? /\\((\\d+\\.?[\\d\\-\\+e]*)\\)/m : /Total: (\\d+\\.?\\d*)/m;\n      var match = regex.exec(stdout);\n      if (!match) {\n        return cb(new Error('Unable to parse output.\\nGot ' + stdout));\n      }\n\n      var equality = parseFloat(match[1]);\n      cb(null, equality <= tolerance, equality, stdout, orig, compareTo);\n    });\n  }\n\n  if (proto) {\n    proto.compare = compare;\n  }\n  return compare;\n};\n\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}